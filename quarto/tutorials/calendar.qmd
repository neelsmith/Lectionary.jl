---
title: "The Liturgical Calendar"
---


## The `LiturgicalYear`


### Constructors

The *liturgical year* is modelled by the `LiturgicalYear` type, a central structure in `Lectionary.jl`. You can create a `LiturgicalYear` from a  `Date` object as a single parameter; if you construct a `LiturgicalYear` with no parameter, the date value defaults to today. You can also construct a `LiturgicalYear` with an integer value for the calendar year in which the liturgical year begins (i.e., the year of the civil calendar that Advent falls in).

```{julia}
#| warning: false
using Lectionary
lityear = LiturgicalYear(2023)
```


### Basic facts of the liturgical year

Things you can find out about a liturgical year include:


-  its place in the three-year cycle of the Revised Commmon Lectionary (identified by one of the characters 'A', 'B' or 'C'):

```{julia}
lectionary_year(lityear)
```

- its sequence in the Episcopal Church's two-year cycle of Daily Office Readings (identified by an integer value, 1 or 2):

```{julia}
daily_office_year(lityear)
```


- the range of its dates (from Advent 1 to the end of the liturgical year) in the civil calendar:

```{julia}
date_range(lityear)
```

The result is a range of `Date`s (from the `Dates` package). Of course you can collect them, like any other range value in Julia. Here we can see that the 2023-2024 liturgical year spans 364 days in the civil calendar.

```{julia}
date_range(lityear) |> collect |> length
```



- a full calendar of dates with assigned readings in the RCL (all Sundays and feast days):

```{julia}
kalendar(lityear)
```

The result is a Vector of `LiturgicalDay`s.



## The `LiturgicalDay`

The `LiturgicalDay` is an abstract type with concrete implementations:

- `Feast`: feasts of the liturgical year other than Sundays with assigned readings in the RCL. (The movable feasts could coincide with a Sunday.)
- `Sunday`:  the Sundays of the liturgical year
- `OtherDay`: days of the year with no assigned reading.


Any date in the civil calendar can be mapped to a `LiturgicalDay`.

```{julia}
using Dates
liturgical_day(Date(2024,4,1))
```


You can find types of days for a liturgical year.



```{julia}
holy_days(lityear)
```







## Seasons of the year

Numerous functions let you find the holy days belonging to a season of the liturgical year.



- advent
- christmastide
- epiphany
